name: ci

on:
  push:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

  docker:
    name: docker
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine image tags
        id: tags
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository }}"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # On main branch push, tag as 'main' and 'latest'
            echo "TAGS=${IMAGE_NAME}:main,${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # On tag creation, use the tag name
            TAG="${{ github.ref_name }}"
            echo "TAGS=${IMAGE_NAME}:${TAG}" >> $GITHUB_OUTPUT
          else
            echo "No valid branch or tag for tagging."
            exit 1
          fi
        shell: bash

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
