# Deities Configuration Example
#
# Configuration can be set via:
# 1. This TOML file
# 2. Environment variables with prefix 'deities_'
#    Example: deities_logger__level=debug
#    (use __ to represent nested fields: logger.level -> deities_logger__level)

# Logger configuration
[logger]
level = "info"  # Options: debug, info, warn, error

# Kubernetes configuration
[k8s]
kubeconfig = "$HOME/.kube/config"  # Path to kubeconfig file (leave empty to use in-cluster config)

# Controller configuration
[controller]
check_interval = "5m"  # How often to check for image updates (default: 5m)

# Docker repositories to monitor
[[controller.repositories]]
name = "nginx-app"
registry = "https://registry-1.docker.io"  # Docker Hub (can be omitted for Docker Hub)
image = "nginx"
tag = "latest"
# Optional authentication for private registries
# [controller.repositories.auth]
# username = "myuser"
# password = "mypassword"

# Example for private registry (e.g., Google Container Registry, AWS ECR, etc.)
# [[controller.repositories]]
# name = "private-app"
# registry = "https://gcr.io"
# image = "myproject/myapp"
# tag = "production"
# [controller.repositories.auth]
# username = "_json_key"
# password = "${GCR_JSON_KEY}"

# Kubernetes deployments to manage
[[controller.deployments]]
name = "nginx-deployment"
namespace = "default"
container = "nginx"
image = "nginx"  # Should match the image prefix from repositories

[[controller.deployments]]
name = "myapp-deployment"
namespace = "production"
container = "app"
image = "myorg/myapp"

# Important: All deployments must have imagePullPolicy: Always
# Example deployment manifest:
#
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   namespace: default
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:latest
#         imagePullPolicy: Always  # REQUIRED
